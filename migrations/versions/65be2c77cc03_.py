"""empty message

Revision ID: 65be2c77cc03
Revises: e870d8d295f9
Create Date: 2023-08-25 22:53:47.927588

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '65be2c77cc03'
down_revision = 'e870d8d295f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('favorite',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('people_uid', sa.Integer(), nullable=False),
    sa.Column('planet_uid', sa.Integer(), nullable=False),
    sa.Column('vehicle_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['people_uid'], ['people.uid'], ),
    sa.ForeignKeyConstraint(['planet_uid'], ['planet.uid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vehicle_uid'], ['vehicle.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.drop_table('favorites')
    with op.batch_alter_table('people', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('people', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    op.create_table('favorites',
    sa.Column('uid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('people_uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('planet_uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vehicle_uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['people_uid'], ['people.uid'], name='favorites_people_uid_fkey'),
    sa.ForeignKeyConstraint(['planet_uid'], ['planet.uid'], name='favorites_planet_uid_fkey'),
    sa.ForeignKeyConstraint(['vehicle_uid'], ['vehicle.uid'], name='favorites_vehicle_uid_fkey'),
    sa.PrimaryKeyConstraint('uid', name='favorites_pkey')
    )
    op.drop_table('favorite')
    op.drop_table('user')
    # ### end Alembic commands ###
